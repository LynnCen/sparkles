{
    "name": "TMMTMM",
    "version": "2.1.161",
    "description": "TMMTMM client built with React, MobX and Electron.",
    "main": "main.js",
    "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1",
        "js-lint": "node node_modules/.bin/eslint .",
        "css-lint": "stylelint --fix src/**/*.css",
        "lint": "npm run css-lint && npm run js-lint",
        "build-main": "cross-env NODE_ENV=production node --max_old_space_size=4096 -r babel-register ./node_modules/webpack/bin/webpack --config ./config/webpack.config.electron.js --progress --profile --colors",
        "build-renderer": "cross-env NODE_ENV=production node --max_old_space_size=4096 -r babel-register ./node_modules/webpack/bin/webpack --config ./config/webpack.config.production.js --progress --profile --colors",
        "build": "node scripts/del.js dist && npm run build-main && npm run build-renderer",
        "package-win-test": "cross-env env=test npm run build && node scripts/del.js release && npm run copy-des && electron-builder --win --x64 --projectDir ./dist -p never",
        "package-win-beta": "cross-env env=beta npm run build && node scripts/del.js release && npm run copy-des && electron-builder --win --x64 --projectDir ./dist -p never",
        "package-win-prod": "cross-env env=production npm run build && node scripts/del.js release && npm run copy-des && electron-builder --win --x64 --projectDir ./dist -p never",
        "package-win-prod-debug": "cross-env env=production debug=1 npm run build && node scripts/del.js release && npm run copy-des && electron-builder --win --x64 --projectDir ./dist -p never",
        "package-win32": "npm run build && node scripts/del.js release && npm run copy-des && electron-builder --win --ia32 --projectDir ./dist -p never",
        "package-win32-test": "npm run build && node scripts/del.js release && npm run copy-des && electron-builder --win --ia32 --projectDir ./dist -p never",
        "package-mac-test": "cross-env env=test npm run build && node scripts/del.js release && export CSC_IDENTITY_AUTO_DISCOVERY=false && mkdir ./dist/node_modules && cp -r ./node_modules/electron ./dist/node_modules/ && electron-builder --mac --projectDir ./dist -p never",
        "package-mac-beta": "cross-env env=beta npm run build && node scripts/del.js release && export CSC_IDENTITY_AUTO_DISCOVERY=false && mkdir ./dist/node_modules && cp -r ./node_modules/electron ./dist/node_modules/ && electron-builder --mac --projectDir ./dist -p never",
        "package-mac-prod": "cross-env env=production npm run build && node scripts/del.js release && export CSC_IDENTITY_AUTO_DISCOVERY=false && mkdir ./dist/node_modules && cp -r ./node_modules/electron ./dist/node_modules/ && electron-builder --mac --projectDir ./dist -p never",
        "package-mac-prod-debug": "cross-env env=production debug=1 npm run build && node scripts/del.js release && export CSC_IDENTITY_AUTO_DISCOVERY=false && mkdir ./dist/node_modules && cp -r ./node_modules/electron ./dist/node_modules/ && electron-builder --mac --projectDir ./dist -p never",
        "hot-server": "cross-env NODE_ENV=development env=development node --max-old-space-size=6096 --inspect=9229 -r babel-register scripts/dev.js",
        "start-hot": "cross-env HOT=1 PORT=3000 NODE_ENV=development env=development ./node_modules/.bin/electron --remote-debugging-port=9222 -r babel-register -r babel-polyfill ./main",
        "dev": "concurrently --kill-others \"npm run hot-server\" \"node scripts/sleep.js & npm run start-hot\"",
        "copy-des": "node scripts/copy.js README.MD ./dist/node_modules && node scripts/sleep.js && node scripts/copydir.js ./node_modules/electron ./dist/node_modules/electron",
        "shuttle": "rm -rf proto_addon && rm -rf proto_addon_pro && rm -rf src && rm -rf config && rm -rf resource && rm -rf locales && rm -rf scripts && rm -rf main.js && cp -r ../pc_chat_tmm/src ./ && cp -r ../pc_chat_tmm/config ./ && cp ../pc_chat_tmm/main.js ./ && cp -r ../pc_chat_tmm/resource ./ && cp -r ../pc_chat_tmm/scripts ./ && cp -r ../pc_chat_tmm/locales ./ && cp -r ../pc_chat_tmm/proto_addon ./ && cp -r ../pc_chat_tmm/proto_addon_pro ./"
    },
    "license": "UNLICENSED",
    "build": {
        "productName": "TMMTMM",
        "appId": "com.tmmtmm.mac",
        "compression": "normal",
        "dmg": {
            "contents": [
                {
                    "x": 130,
                    "y": 220
                },
                {
                    "x": 410,
                    "y": 220,
                    "type": "link",
                    "path": "/Applications"
                }
            ],
            "title": "TMMTMM ${version}",
            "sign":false
        },
        "mac": {
            "icon": "../resource/dock.icns",
            "extendInfo": {
                "NSCameraUsageDescription": "This app requires camera access to record video.",
                "NSMicrophoneUsageDescription": "This app requires microphone access to record audio."
            },
            "extraResources": [],
            "hardenedRuntime": true,
            "gatekeeperAssess": false,
            "entitlements": "mac/entitlements.mac.plist",
            "entitlementsInherit": "mac/entitlements.mac.plist",
            "artifactName": "${productName}_MAC_V${version}.${ext}"
        },
        "linux": {
            "icon": "../resource",
            "category": "Chat",
            "executableName": "TMMTMM",
            "target": [
                "deb",
                "AppImage"
            ],
            "extraResources": []
        },
        "win": {
            "target": "nsis",
            "icon": "../resource/win.ico",
            "requestedExecutionLevel": "asInvoker",
            "extraResources": [],
            "artifactName": "${productName}_Win_${arch}_64bit_V${version}.${ext}"
        },
        "nsis": {
            "oneClick": false,
            "allowToChangeInstallationDirectory": true,
            "deleteAppDataOnUninstall": true,
            "perMachine": false,
            "createDesktopShortcut": true,
            "shortcutName": "TMMTMM"
        },
        "directories": {
            "output": "../release"
        },
        "publish": [
            {
                "provider": "generic",
                "url": "https://static.tmmtmm.com.tr/pc-upgrade/"
            }
        ]
    },
    "dependencies": {
        "@ant-design/icons": "^4.2.1",
        "@aws-sdk/client-cognito-identity": "^3.3.0",
        "@aws-sdk/client-s3": "^3.3.0",
        "@aws-sdk/credential-provider-cognito-identity": "^3.3.0",
        "@aws-sdk/lib-storage": "^3.18.0",
        "@aws-sdk/node-http-handler": "^3.3.0",
        "@aws-sdk/s3-request-presigner": "^3.3.0",
        "@aws-sdk/types": "^3.3.0",
        "@aws-sdk/util-create-request": "^3.3.0",
        "@aws-sdk/util-format-url": "^3.3.0",
        "@types/ws": "^7.4.5",
        "anchorme": "^2.1.2",
        "antd": "^4.5.1",
        "atob": "^2.1.2",
        "auto-launch": "^5.0.1",
        "axios": "^0.18.0",
        "base64-arraybuffer": "^0.2.0",
        "base64-img": "^1.0.4",
        "benz-amr-recorder": "^1.0.13",
        "browser-md5-file": "^1.0.0",
        "btoa": "^1.2.1",
        "chalk": "^4.1.0",
        "classnames": "^2.3.1",
        "compressorjs": "^1.0.7",
        "delegate": "^3.1.3",
        "detectrtc": "^1.3.9",
        "dexie": "^3.0.3",
        "dmg-builder": "^21.2.0",
        "draft-js": "^0.11.7",
        "electron-context-menu": "^0.11.0",
        "electron-json-storage": "^4.0.2",
        "electron-screenshots": "0.0.10",
        "electron-window-state": "^4.1.1",
        "emoji-mart": "^2.11.1",
        "file-saver": "^2.0.2",
        "form-data": "^3.0.0",
        "get-prefix": "^1.0.0",
        "get-stream": "^6.0.1",
        "got": "^11.8.2",
        "han": "^0.0.7",
        "i18n": "^0.8.3",
        "iconv-lite": "^0.6.2",
        "image-size": "^1.0.0",
        "intl": "^1.2.5",
        "jr-qrcode": "^1.1.4",
        "less-loader": "^6.2.0",
        "lodash": "^4.17.21",
        "long": "^4.0.0",
        "md5": "^2.3.0",
        "md5-node": "^1.0.1",
        "mime-types": "^2.1.30",
        "mobx": "^5.0.3",
        "mobx-react": "^5.2.3",
        "moment": "^2.27.0",
        "osenv": "^0.1.5",
        "pinyin": "^2.10.2",
        "play-sound": "^1.1.1",
        "prop-types": "^15.6.0",
        "push.js": "^1.0.12",
        "query-string": "^7.0.1",
        "randomcolor": "^0.5.3",
        "rc-checkbox": "^2.1.8",
        "rc-virtual-list": "^3.4.2",
        "react-addons-css-transition-group": "^15.6.2",
        "react-cropper": "^2.1.8",
        "react-dom": "^16.0.0",
        "react-image-lightbox": "^5.1.1",
        "react-images": "^1.0.0",
        "react-infinite-scroller": "^1.2.4",
        "react-intl": "^5.18.1",
        "react-masonry-component": "^6.3.0",
        "react-onclickoutside": "^6.9.0",
        "react-quill": "^1.3.5",
        "react-router-dom": "^4.2.2",
        "react-virtualized": "^9.22.3",
        "reactjs-popup": "^1.5.0",
        "resize-image": "^0.1.0",
        "scroll-into-view-if-needed": "^2.2.20",
        "sha1": "^1.1.1",
        "smooth-scroll-into-view-if-needed": "^1.1.23",
        "tmp": "0.0.33",
        "tributejs": "^5.1.3",
        "underscore": "^1.9.1",
        "universal-emoji-parser": "^0.5.22",
        "viewerjs": "^1.10.4",
        "webrtc-adapter": "7.3.0",
        "ws": "^7.5.0"
    },
    "devDependencies": {
        "@types/dexie": "^1.3.1",
        "@types/lodash": "^4.14.171",
        "@types/md5": "^2.3.0",
        "@types/mime-types": "^2.1.1",
        "@types/osenv": "^0.1.0",
        "acorn": "^6.4.1",
        "awesome-typescript-loader": "^5.2.1",
        "babel-core": "^6.25.0",
        "babel-eslint": "^8.0.1",
        "babel-loader": "^7.1.1",
        "babel-minify-webpack-plugin": "^0.3.1",
        "babel-plugin-add-module-exports": "^0.2.1",
        "babel-plugin-react-css-modules": "^3.3.2",
        "babel-plugin-transform-async-to-generator": "^6.24.1",
        "babel-plugin-transform-decorators-legacy": "^1.3.4",
        "babel-polyfill": "^6.23.0",
        "babel-preset-env": "^1.7.0",
        "babel-preset-es2015": "^6.24.1",
        "babel-preset-react": "^6.24.1",
        "babel-preset-react-hmre": "^1.1.1",
        "babel-preset-react-optimize": "^1.0.1",
        "babel-preset-stage-0": "^6.24.1",
        "babel-register": "^6.24.1",
        "concurrently": "^3.5.0",
        "copy-dir": "^1.3.0",
        "copy-webpack-plugin": "^4.2.0",
        "cpy-cli": "^2.0.0",
        "cross-env": "^5.2.1",
        "css-loader": "^1.0.0",
        "del-cli": "^3.0.1",
        "devtron": "^1.4.0",
        "electron": "^8.4.1",
        "electron-builder": "^21.2.0",
        "electron-updater": "^3.0.1",
        "eslint": "^5.1.0",
        "eslint-config-standard": "^11.0.0",
        "eslint-config-standard-react": "^6.0.0",
        "eslint-formatter-pretty": "^1.1.0",
        "eslint-loader": "^2.0.0",
        "eslint-plugin-import": "^2.8.0",
        "eslint-plugin-node": "^7.0.1",
        "eslint-plugin-promise": "^3.6.0",
        "eslint-plugin-react": "^7.4.0",
        "eslint-plugin-standard": "^3.0.1",
        "express": "^4.16.2",
        "extract-text-webpack-plugin": "^3.0.2",
        "file-loader": "^1.1.5",
        "html-loader": "^0.5.1",
        "html-webpack-plugin": "^3.2.0",
        "json-loader": "^0.5.4",
        "native-ext-loader": "^2.3.0",
        "node-loader": "^0.6.0",
        "postcss-autoreset": "^2.0.0",
        "postcss-cssnext": "^3.0.2",
        "postcss-import": "^11.0.0",
        "postcss-loader": "^2.0.8",
        "postcss-modules": "^1.1.0",
        "prettier": "2.2.1",
        "react": "^16.8.6",
        "shelljs": "^0.8.4",
        "style-loader": "^0.21.0",
        "stylelint": "^9.3.0",
        "stylelint-config-standard": "^18.2.0",
        "terser-webpack-plugin": "^4.2.3",
        "typescript": "^4.2.4",
        "url-loader": "^1.0.1",
        "webpack": "^4.29.6",
        "webpack-cli": "^3.3.0",
        "webpack-dev-middleware": "^3.6.1",
        "webpack-hot-middleware": "^2.24.3"
    }
}
