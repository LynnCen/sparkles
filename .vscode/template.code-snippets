// name: 页面、组件、表单模板
{
  "V2FormInput 组件模板": {
    "prefix": "<V2FormInput",
    "description": "V2FormInput 组件模板",
    "body": [
      "<V2FormInput",
        "label='姓名'",
        "name='name'",
        "formItemConfig={{ extra: '这里是额外信息' }}",
        "required",
        "config={{ allowClear: true, showCount: true }}",
      "/>",
    ]
  },
  "弹窗表单-单列": {
    "prefix": "<Modal",
    "description": "Modal 弹窗表单-单列模板",
    "body": [
      "<Modal",
      "        title='单列模板'",
      "        open={visible}",
      "        onOk={methods.onOk}",
      "        // 两列弹窗要求336px",
      "        width={336}",
      "        onCancel={methods.onCancel}",
      "        forceRender",
      "      >",
      "        <V2Form form={form}>",
      "          <V2FormTreeSelect",
      "            label='树选择'",
      "            name='tree'",
      "            required",
      "            treeData={treeData}",
      "            config={{",
      "              treeDefaultExpandAll: true,",
      "              showSearch: true,",
      "              treeNodeFilterProp: 'name',",
      "            }}",
      "          />",
      "        </V2Form>",
      "      </Modal>"
    ]
  },
  "弹窗表单-两列": {
    "prefix": "<Modal",
    "description": "Modal 弹窗表单-两列模板",
    "body": [
      "<Modal",
      "        title='两列模板'",
      "        open={visible}",
      "        onOk={methods.onOk}",
      "        // 两列弹窗要求640px",
      "        width={640}",
      "        onCancel={methods.onCancel}",
      "        forceRender",
      "      >",
      "        <V2Form form={form}>",
      "          <Row gutter={16}>",
      "            <Col span={12}>",
      "              <V2FormTreeSelect",
      "                label='树选择'",
      "                name='tree'",
      "                required",
      "                treeData={treeData}",
      "                config={{",
      "                  treeDefaultExpandAll: true,",
      "                  showSearch: true,",
      "                  treeNodeFilterProp: 'name',",
      "                }}",
      "              />",
      "            </Col>",
      "            <Col span={12}>",
      "              <V2FormInput label='输入框' name='input' required maxLength={20}/>",
      "            </Col>",
      "            <Col span={12}>",
      "              <V2FormSelect label=\"选择框\" name=\"select\" required options={options}/>",
      "            </Col>",
      "            <Col span={12}>",
      "              <V2FormRangeInput required useBaseRules label=\"范围框1\" name={['minArea1', 'maxArea1']} extra='m' />",
      "            </Col>",
      "            <Col span={12}>",
      "              <V2FormTextArea label='文本域' name='desc' maxLength={500} config={{ showCount: true }}/>",
      "            </Col>",
      "          </Row>",
      "        </V2Form>",
      "      </Modal>"
    ]
  },
  "react 简单页面模板片段": {
    "prefix": "react",
		"scope": "typescriptreact",
    "description": "react 简单页面模板片段",
    "body": [
      "// 基本信息",
      "import { Button } from 'antd';",
      "import { useState, FC } from 'react';",
      "",
      "const Component:FC = () => {",
      "  const [count, setCount] = useState(0);",
      "",
      "  return <div>",
      "    <div className='fn-16 lh-22 font-weight-500'>基础信息</div>",
      "",
      "    <span className='mr-10'>{count}</span>",
      "    <Button size='small' onClick={() => setCount(count + 1)}>点我</Button>",
      "",
      "  </div>;",
      "};",
      "",
      "export default Component;",
      ""
    ]
  },

  "编辑表单弹窗 片段，使用 Drawer 弹窗": {
    "prefix": "form-drawer",
		"scope": "typescriptreact",
    "description": "编辑表单弹窗 片段，使用 Drawer 弹窗",
    "body": [
      "// 采购单编辑-添加点位",
      "import { contrast, deepCopy, isNotEmpty } from '@lhb/func';",
      "import dayjs from 'dayjs';",
      "import styles from './index.module.less';",
      "import { FC, forwardRef, useImperativeHandle, useState } from 'react';",
      "import { Form, Button, Drawer, Divider } from 'antd';",
      "import { CloseOutlined } from '@ant-design/icons';",
      "import FormRangePicker from '@/common/components/Form/FormRangePicker';",
      "import FormDatePicker from 'src/common/components/Form/FormDatePicker';",
      "import { useMethods } from '@lhb/hook';",
      "",
      "const layout = {",
      "  // labelCol: { span: 6 },",
      "  // wrapperCol: { span: 16 },",
      "};",
      "",
      "// 处理日期为 年月日",
      "const parseDate = (date) => {",
      "  return isNotEmpty(date) ? dayjs(date).format('YYYY-MM-DD') : null;",
      "};",
      "",
      "const Editor:FC<any> = forwardRef(({ onConfirm }, ref) => {",
      "  // 抛出给 ref 事件",
      "  useImperativeHandle(ref, () => ({",
      "    init: methods.init",
      "  }));",
      "",
      "  const [visible, setVisible] = useState(false);",
      "",
      "  const [form] = Form.useForm();",
      "  const [fieldName, setFieldName] = useState(''); // 显示的场地名称字段",
      "  const [requsting, setRequsting] = useState(false);",
      "",
      "  // const name = Form.useWatch('name', form); // 不生效",
      "  const size = Form.useWatch('size', form);",
      "",
      "  const methods = useMethods({",
      "    init(data) {",
      "      console.log('init', data);",
      "",
      "      // TODO 模拟 data 传入数据，需要获取以下信息",
      "      data = {",
      "        name: data.name, // 场地名称",
      "        size: data.size, // 面积",
      "        total_amount: 1500, // 场地成本",
      "        has_deposit: 0, // 是否含押金",
      "        date: ['2022-11-10', '2022-11-28'], // 活动日期",
      "        enter_time: '2022-11-27', // 进场时间",
      "        exit_time: '2022-11-30', // 撤场时间",
      "      };",
      "",
      "      setVisible(true);",
      "",
      "      form.resetFields(); // 先重置表单",
      "",
      "      setFieldName(data.name); // 显示的场地名称字段",
      "",
      "      const result = {",
      "        name: contrast(data, 'name'), // 场地名称",
      "        size: contrast(data, 'size'), // 面积",
      "        date: contrast(data, 'date', []).map(item => dayjs(item)), // 活动日期",
      "        enter_time: dayjs(contrast(data, 'enter_time')), // 进场时间",
      "        exit_time: dayjs(contrast(data, 'exit_time')), // 撤场时间",
      "      };",
      "",
      "      // 表单赋值",
      "      form.setFieldsValue(result);",
      "    },",
      "    // 提交表单数据",
      "    onSubmit() {",
      "      form.validateFields().then((values: any) => {",
      "        console.log('values', values);",
      "",
      "        values = deepCopy(values);",
      "",
      "        const params = {",
      "          date: contrast(values, 'date', []).map(item => parseDate(item)), // 活动日期",
      "          enter_time: parseDate(contrast(values, 'enter_time')), // 进场时间",
      "          exit_time: parseDate(contrast(values, 'exit_time')), // 撤场时间",
      "        };",
      "",
      "        console.log('onConfirm params', params);",
      "        setRequsting(true);",
      "        // 模拟接口请求",
      "        setTimeout(() => {",
      "          setRequsting(false);",
      "          onConfirm && onConfirm(params);",
      "          methods.onCancel();",
      "        }, 200);",
      "      });",
      "    },",
      "",
      "    // 关闭弹窗",
      "    onCancel() {",
      "      // 触发父级的回调",
      "      // onClose && onClose();",
      "      setVisible(false);",
      "    },",
      "",
      "  });",
      "",
      "  return (<Drawer",
      "    title='编辑点位价格信息'",
      "    open={visible}",
      "    width={720}",
      "    getContainer={false}",
      "    maskClosable={false}",
      "    onClose={methods.onCancel}",
      "    forceRender",
      "    closable={false}",
      "    extra={",
      "      <>",
      "        <button type='button' className='ant-drawer-close' onClick={methods.onCancel}>",
      "          <CloseOutlined className='anticon anticon-close'/>",
      "        </button>",
      "      </>",
      "    }",
      "  >",
      "",
      "    <Form {...layout} labelAlign='left' form={form} colon={false} className={styles.form}>",
      "",
      "      <div className='fn-16 lh-22 font-weight-500 mb-20'>{fieldName}</div>",
      "",
      "      <div className='fn-14 lh-20 font-weight-500 mb-16'>1.点位信息</div>",
      "      <div className='flex-row'>",
      "        <FormRangePicker label='活动日期' name='date' rules={[{ required: true, message: '请选择活动日期' }]} formItemConfig={{ className: 'mr-20' }} />",
      "        <FormDatePicker label='进场时间' name='enter_time' placeholder='请选择进场时间' />",
      "      </div>",
      "      <div className='flex-row'>",
      "        <FormDatePicker label='撤场时间' name='exit_time' formItemConfig={{ className: 'mr-20' }} placeholder='请选择撤场时间' />",
      "        <Form.Item label='场地面积' name='size'><div className={styles.size}>{size}</div></Form.Item>",
      "      </div>",
      "",
      "      <div className='pb-16'>",
      "        <Divider className='mt-16 mb-16'></Divider>",
      "        <div className='ct'>",
      "          <Button className='mr-20' disabled={requsting} onClick={methods.onCancel}>取消</Button>",
      "          <Button type='primary' disabled={requsting} onClick={methods.onSubmit}>提交</Button>",
      "        </div>",
      "      </div>",
      "",
      "    </Form>",
      "  </Drawer>);",
      "});",
      "",
      "export default Editor;",
      ""
    ]
  },
  "详情页面编辑表单片段": {
    "prefix": "detail-form",
		"scope": "typescriptreact",
    "description": "详情页面编辑表单片段",
    "body": [
      "// 基本信息",
      "import { FC, useEffect, useState } from 'react';",
      "import { deepCopy, getKeysFromObjectArray } from '@lhb/func';",
      "import { postPurchaseOrderUpdate } from '@/common/api/purchase';",
      "import styles from '../entry.module.less';",
      "import { Col, Row, Typography, Form, Button, message } from 'antd';",
      "// import { Description, PageContainer } from '@/common/components';",
      "import FormInput from 'src/common/components/Form/FormInput';",
      "import FormResourceBrand from 'src/common/components/FormBusiness/FormResourceBrand';",
      "",
      "const layout = {",
      "  // labelCol: { span: 6 },",
      "  // wrapperCol: { span: 16 },",
      "};",
      "",
      "interface ActiveInfoEditorProps {",
      "  id: number, // 采购单id",
      "  title: string, // 活动名称",
      "  brands: Array<any> // 品牌数组",
      "}",
      "",
      "const Component:FC<ActiveInfoEditorProps> = ({ id, title, brands }) => {",
      "",
      "  const [form] = Form.useForm();",
      "  const [requesting, setRequesting] = useState(false);",
      "",
      "  useEffect(() => {",
      "    form.setFieldsValue({ title, brandIds: getKeysFromObjectArray(brands, 'id') });",
      "  }, [title, brands]);",
      "",
      "  // 确定",
      "  const confirm = () => {",
      "    form.validateFields().then((values) => {",
      "      const params = Object.assign({ id }, deepCopy(values));",
      "      console.log('params', params);",
      "      setRequesting(true);",
      "      postPurchaseOrderUpdate(params).then(() => {",
      "        // dispatchNavigate('/purchase');",
      "        message.success('编辑保存成功');",
      "      }).finally(() => {",
      "        setRequesting(false);",
      "      });",
      "    });",
      "  };",
      "",
      "  return (",
      "    <>",
      "      {/* <Typography.Title level={5}>活动信息</Typography.Title>",
      "      <PageContainer noPadding noMargin>",
      "        <Row gutter={20}>",
      "          <Col span={12}>",
      "            <Description border label='活动名称'>{title}</Description>",
      "          </Col>",
      "          <Col span={12}>",
      "            <Description border label='品牌名称'>{brands?.map(item => item.name)}</Description>",
      "          </Col>",
      "        </Row>",
      "      </PageContainer> */}",
      "",
      "      <Typography.Title level={5}>活动信息</Typography.Title>",
      "      <Form {...layout} labelAlign='left' form={form} colon={true} className={styles['active-info-editor-form']} >",
      "        <Row gutter={20}>",
      "          <Col span={12}>",
      "            <FormInput",
      "              label='活动名称'",
      "              name='title'",
      "              maxLength={50}",
      "              allowClear",
      "              rules={[{ required: true, whitespace: true, message: '请输入活动名称' }]}",
      "              placeholder='请输入活动名称'",
      "            />",
      "          </Col>",
      "          <Col span={12}>",
      "            <FormResourceBrand",
      "              name='brandIds'",
      "              label='品牌'",
      "              config={{ mode: 'multiple' }}",
      "              rules={[{ required: true, message: '请选择品牌' }]}",
      "            />",
      "          </Col>",
      "        </Row>",
      "        <div className={styles['btn-wrapper']}>",
      "          <Button type='primary' disabled={requesting} onClick={confirm}>确定</Button>",
      "        </div>",
      "      </Form>",
      "",
      "    </>);",
      "};",
      "",
      "export default Component;",
      ""
    ]
  }
}